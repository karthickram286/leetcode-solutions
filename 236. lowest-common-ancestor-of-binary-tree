/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        return lca(root, p, q);
    }
    
    public TreeNode lca(TreeNode root, TreeNode p, TreeNode q) {
        
        // Base case
        if (root == null)
            return null;
        
        if (root.val == p.val || root.val == q.val)
            return root;
        
        TreeNode left = lca(root.left, p, q);
        TreeNode right = lca(root.right, p, q);
        
        // The mid value is the root
        if (left != null && right != null)
            return root;
        
        // The LCA can be an direct parent of the node
        // Then either left or right of root can be null
        return (left != null) ? left : right;
    }
}
