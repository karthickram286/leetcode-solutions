class Solution {
    public int rob(int[] nums) {
        
        int n = nums.length;
        
        // Base conditions
        if (n == 0) 
            return 0;
        if (n == 1)
            return nums[0];
        
        int[] dp = new int[n];
        dp[0] = nums[0];
        dp[1] = Math.max(nums[0], nums[1]);
        
        for (int i = 2; i < n; i++) {
            // Finding the max for that position by finding the max between
            // previous postion and sum of current and i-2 position
            dp[i] = Math.max(dp[i-1], nums[i] + dp[i-2]);
        }
        
        return dp[n-1];
    }
}
