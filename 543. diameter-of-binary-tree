/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxDiameter = 0;

    public int diameterOfBinaryTree(TreeNode root) {
        diameter(root);
        return (maxDiameter == 0) ? 0 : maxDiameter - 1;
    }
    
    public int diameter(TreeNode node) {
        
        // Base case
        if (node == null)
            return 0;
        
        int left = diameter(node.left);
        int right = diameter(node.right);
        int diameter = left + right + 1;
        maxDiameter = Math.max(maxDiameter, diameter);
        
        return Math.max(left, right) + 1;
    }
}
