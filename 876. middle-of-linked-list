/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode middleNode(ListNode head) {
        
        ListNode l1 = head;
        int length = getLength(l1);
        
        ListNode l2 = head;
        return getMiddle(l2, length/2);
    }
    
    private int getLength(ListNode l1) {
        int l = 0;
        while(l1 != null) {
            l1 = l1.next;
            l++;
        }
        return l;
    }
    
    private ListNode getMiddle(ListNode head, int mid) {
        while(mid-- > 0) {
            head = head.next;
        }
        return head;
    }
}
