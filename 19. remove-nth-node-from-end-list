/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        
        ListNode front = head;
        ListNode back = head;
                
        for (int i = 0; i < n; i++)
            back = back.next;
        
        // If n is greater than or equal to length of the list
        // remove the head
        if (back == null) {
            head = head.next;
            return head;
        }
        
        while(back != null && back.next != null) {
            back = back.next;
            front = front.next;
        }
        
        front.next = front.next.next;
        return head;
    }
}
