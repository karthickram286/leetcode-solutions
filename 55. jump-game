class Solution {
    public boolean canJump(int[] nums) {
        int n = nums.length, maxJump = 0;
        
        if (nums[0] == 0 && n == 1)
            return true;
        
        for (int i = 0; i < n; i++) {
            
            if (i > maxJump)            // If the current can't be reached by any previous jump return false
                return false;
            
            int jump = i + nums[i];
            maxJump = Math.max(jump, maxJump);
            
            if (maxJump >= n-1)         // If the maximum jump reaches/crosses the end of array return true
                return true;
        }
        return false;
    }
}
